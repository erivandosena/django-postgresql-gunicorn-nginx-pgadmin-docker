version: '3.8'

services:
  # Aplicacao Web Django usando Gunicorn(WSGI server)
  appdjango:
    build:
      context: .
      args:
        DOCKER_SERVICE_NAME: ${DJANGO_DOCKER_SERVICE_NAME}
    container_name: django-gunicorn
    restart: always
    #env_file:
    #  - config/env/env_django
    volumes:
      - .:/opt/services/${DJANGO_DOCKER_SERVICE_NAME}/src
      - static_data:/opt/services/${DJANGO_DOCKER_SERVICE_NAME}/static
      - media_data:/opt/services/${DJANGO_DOCKER_SERVICE_NAME}/media
    networks:
      - database_network
      - nginx_network
    depends_on:
      - postgresql
      
  # Bando de dados PostgreSQL
  postgresql:
    image: postgres:11
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - config/env/env_database
    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      - database_network
      
  # Servidor Nginx (Proxy reverso, HTTP, IMAP/POP3)
  nginx:
    image: nginx:1.19
    container_name: nginx_server
    restart: always
    ports:
      - 8000:80
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static_data:/opt/services/${DJANGO_DOCKER_SERVICE_NAME}/static
      - media_data:/opt/services/${DJANGO_DOCKER_SERVICE_NAME}/media
    networks:
      - nginx_network
    depends_on:
      - appdjango
      
  # Administracao do banco de dados PostgreSQL (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:4.30
    container_name: pgadmin4
    restart: always
    #environment:
    #  PGADMIN_DEFAULT_EMAIL: ${DJANGO_PGADMIN_EMAIL}
    #  PGADMIN_DEFAULT_PASSWORD: ${DJANGO_PGADMIN_PASSWORD}
    #  PGADMIN_LISTEN_PORT: 80
    ports:
      - "8081:80"
    env_file:
      - config/env/env_pgadmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - database_network
      - nginx_network
    depends_on:
      - postgresql
      
networks:
  database_network:
    driver: bridge
  nginx_network:
    driver: bridge
    
volumes:
  database_data:
  static_data:
  media_data:
  pgadmin_data:
